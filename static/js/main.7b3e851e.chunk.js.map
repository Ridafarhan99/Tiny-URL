{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","ans","useState","oldlink","setLink","tinylink","getLink","fetch","then","response","json","data","slink","result","code","console","log","catch","err","className","class","type","onChange","e","target","value","required","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA2DeA,MAxDf,WAEE,IAcIC,EAdJ,EAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAiBC,EAAjB,KAyCA,OA1BAC,MADY,wCAAwCJ,GAEnDK,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAEL,IAAIC,EAAQD,EAAKE,OAAOC,KACxBb,EAAM,qBAAqBW,EAC3BG,QAAQC,IAAIf,MAEbgB,OAAM,SAACC,GACNH,QAAQC,IAAI,gCAgBZ,sBAAKG,UAAU,MAAf,UACE,oBAAIC,MAAM,UAAV,8BACA,uBAAOC,KAAK,OAAOD,MAAM,QAAQE,SAxCrC,SAAkBC,GAChBnB,EAAQmB,EAAEC,OAAOC,QAuCsCC,UAAQ,IAF/D,IAIE,wBAAQN,MAAM,SAASO,QAb3B,SAAoBJ,GAClBjB,EACEL,IAWA,oBAEA,gDAAkB,oBAAImB,MAAM,OAAV,SAAkBf,IAApC,WC1CSuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.7b3e851e.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n\n  const [oldlink, setLink] = useState('');\n  const [tinylink, getLink] = useState('');\n\n\n  /*for old link*/\n  function reallink(e){  \n    setLink(e.target.value);\n  }\n\n\n\n\n\n  // for fetching data from API\n  let ans;\n  const API = 'https://api.shrtco.de/v2/shorten?url='+oldlink;\n  fetch(API)\n  .then((response)=>{\n    return response.json();\n  })\n  .then((data)=>{\n    // console.log(data.result.code)\n    let slink = data.result.code;\n    ans = 'https://shrtco.de/'+slink;\n    console.log(ans);\n  })\n  .catch((err)=>{\n    console.log(\"Please enter a valid link\");\n  });\n\n\n\n\n  /*for new link*/\n  function createTiny(e){\n    getLink(\n      ans\n    );\n  }\n\n\n  // getting data an HTML stuff\n  return (\n    <div className=\"app\">\n      <h2 class=\"heading\">Enter URL here: </h2>\n      <input type=\"text\" class=\"input\" onChange={reallink} required></input> {/*reallink used to create function*/}\n      \n      <button class=\"submit\" onClick={createTiny}>Submit</button>\n\n      <h4>Shorted link: <h6 class=\"link\">{tinylink}</h6> </h4>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}